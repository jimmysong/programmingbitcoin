[[chapter_elliptic_curves]]
== Elliptic Curves

[.lead]
As in the previous chapter, elliptic curves can look intimidating if you haven't seen them before. Also as in the previous chapter, the actual math isn't very difficult. Most of Elliptic Curves could have been taught to you around the second year of High School. In this chapter, we'll get to what these curves are and what we can do with them.

=== Definition

Elliptic Curves are really just like many equations you've been seeing since around 8th grade. They have y on one side and x on the other in some form. They specifically have a form like this:

y^2^=x^3^+ax+b

This is a little different than what you've seen, but truthfully, isn't really that different. For example, you are probably familiar with the linear equation:

y = mx + b

You may even remember that *m* here has the name _slope_ and *b*, _y-intercept_. You can also graph linear equations like this:

TODO: Graph of linear equation

Similarly, you're probably familiar with the quadratic equation and its graph:

y = ax^2^+bx+c

TODO: Graph of quadratic equation

And sometime in high school, you did even higher orders on x, something called the cubic equation and its graph:

y = ax^3^+bx^2^+cx+d

TODO: Graph of cubic equation

An elliptic curve isn't all that different. The only real difference between the elliptic curve and the cubic curve above is the *y^2^* term on the left side. This has the effect of making the graph symmetric over the x-axis like so:

TODO: Graph of elliptic curve equation

You may also have noticed that the elliptic curve is less steep than the cubic curve. Again, this is because of the *y^2^* term on the right. At times, the curve may even be disjoint like this:

TODO: Graph of another elliptic curve equation

If it helps, an elliptic curve is more or less made by taking a cubic equation graph, taking only the part above the x-axis, flattening it out and then mirroring the top half on the bottom half of the x-axis.

TODO: Diagram showing what's described in prev paragraph

Specifically, the elliptic curve used in Bitcoin is called secp256k1 and it uses this particular equation:

y^2^=x^3^+7

The canonical form is y^2^=x^3^+ax+b so you can also think of the curve as being `a=0`, `b=7`. The curve looks like this:

TODO: Graph of secp256k1 over reals

=== Coding Elliptic Curves in Python

We are not interested in the curve itself, but specific points on the curve. For example, in the curve y^2^=x^3^+5x+7, we are interested in the coordinate (-1,1). We are thus going to define the class `Point` to be the actual point on a specific curve. The curve has a specifc form, y^2^=x^3^+ax+b so we can define the curve with just the two numbers *a* and *b*.

[source,python]
----
class Point:

    def __init__(self, x, y, a, b):
        self.a = a
        self.b = b
        self.x = x
        self.y = y
        if self.y**2 != self.x**3+self.a*self.x + self.b: # <1>
	    raise ValueError('Point ({},{}) is not on the curve where a,b={},{}'.format(x,y,a,b))

    def __eq__(self, other): # <2>
        return self.a == other.a and self.b == other.b and self.x == other.x and self.y == other.y

----
<1> We check here that the point is actually on the curve.
<2> Points are equal iff they are on the same curve and have the same coordinates

==== Exercise {counter:exercise}

Determine which of these points are on the curve y^2^=x^3^+5x+7:

(2,4), (1,-1), (18,77), (5,7)


==== Exercise {counter:exercise}

Write the $$__ne__$$ method for `Point`.


=== Point Addition

The main reason that Elliptic Curves are useful is because of something called Point Addition. 

It turns out that for every elliptic curve, a line will intersect at either 1 or 3 points.

TODO: Graph of various intersections of elliptic curves and lines

The two exceptions are when a line is _tangent_ to the curve and when a line is exactly vertical.

TODO: Graph of tangent and vertical lines.

We will come back to these two cases later.

What's interesting is that we can define something called *point addition* using this fact. Like with Field Addition, we define point addition ourselves. In our case, point addition is defined this way:

For any two points P~1~=(x~1~,y~1~) and P~2~=(x~2~,y~2~), we get P~1~+P~2~ by:

* Find the point intersects the elliptic curve a third time by drawing a line through P~1~ and P~2~
* Reflect the resulting point over the x-axis

Visually, it looks something like this:

TODO: Graph of various point addition possibilities

As you can see, point addition is not easily predictable. We can calculate point addition easily enough with a formula, but intuitively, the result of point addition can be almost anywhere given two points on the curve. That is, point addition is non-linear.

=== Math of Point Addition

The reason why we have "addition" in the Point Addition name is that Point Addition satisfies certain properties that we think of as addition. Specifically, addition has these properties:

* Identity
* Commutativity
* Associativity
* Invertibiltiy

Identity here means that there's a zero. That is, there exists some point (I) which when added to a point (P) results in P. We'll call this point the point at infinity (reasons for this will become clear in a bit). That is:

I + P = P

This is also related to invertibility. For some point P, there's some other point -P which results in the Identity point. That is:

P + (-P) = I

Visually, these are points opposite each other in the elliptic curve.

TODO: Show vertical point addition image

This is why we call this point the point at infinity. We have one extra point in the elliptic curve which makes the vertical line intersect a third time.

Commutativity means that P+Q=Q+P. This is obvious since the line going through P and Q will intersect the curve a third time in the same place no matter what order.

Associativity means that (P+Q) + R=P + (Q+R). This isn't obvious and is the reason for flipping over the x-axis.

TODO: Show associativity visually.

==== Exercise {counter:exercise}

We have to account for the point at infinity somehow, and the easiest way to do so is to have (x,y)=(None,None). Make sure we can initialize the point at infinity.

==== Exercise {counter:exercise}

We are going to write the $$__add__$$ method for the `Point` class. Handle the case when one of the points is the point at infinity.

==== Exercise {counter:exercise}

Now handle the case where the two points are negatives of each other. That is, they have the same x, but a different y.

=== Point Addition for when x~1~≠x~2~

When we have points where the x's differ, we can add using a fairly simple formula. To help with intuition, it helps first to find the slope created by the two points. You can figure this out using a formula you probably learned in middle school:

P~1~=(x~1~,y~1~), P~2~=(x~2~,y~2~), P~3~=(x~3~,y~3~)

P~1~+P~2~=P~3~

s=(y~2~-y~1~)/(x~2~-x~1~)

This is the slope and we can figure out where the x~3~ intersection is. Once we know that, we can calculate y~3~. P~3~ can thus be derived using this formula:

x~3~=s^2^-x~1~-x~2~

y~3~=s(x~1~-x~3~)-y~1~

Remember that y~3~ is the reflection over the x-axis.

.Deriving The Point Addition Formula
****
Let's start with the fact that the line that goes through P~1~ and P~2~ looks like this:

s=(y~2~-y~1~)/(x~2~-x~1~)

y=s(x-x~1~)+y~1~

The second formula here is the equation of the line that intersects at both P~1~ and P~2~. Now using this formula and plugging it into the elliptic curve equation, we get:

x^3^+ax+b=y^2^=(s(x-x~1~)+y~1~)^2^

x^3^-s^2^x^2^+(a+2s^2^x~1~-2sy~1~)x+b-(sx~1~-y~1~)^2^=0

We know that x~1~, x~2~ and x~3~ are solutions to this equation, thus:

(x-x~1~)(x-x~2~)(x-x~3~)=0

x^3^-(x~1~+x~2~+x~3~)x^2^ +(x~1~x~2~+x~1~x~3~+x~2~x~3~)x-x~1~x~2~x~3~=0

From above, we know that:

x^3^-s^2^x^2^+(a+2s^2^x~1~-2sy~1~)x+b-(sx~1~-y~1~)^2^=0

We know that each coefficient has to equal each other. The first one that's interesting is the one in front of x^2^:

s^2^=x~1~+x~2~+x~3~

We can use this to derive the formula for x~3~:

x~3~=s^2^-x~1~-x~2~

We can plug this in to the formula for the line above:

y=s(x-x~1~)+y~1~

But we have to reflect over the x-axis, so this has to be negated:

y~3~=-(s(x-x~1~)+y~1~)=s(x~1~-x~3~)-y~1~

That's how we arrive at this formula.
****

==== Exercise {counter:exercise}

For the curve y^2^=x^3^+5x+7, what is (2,5) + (-1,-1)?

==== Exercise {counter:exercise}

Write the $$__add__$$ method where x~1~≠x~2~

=== Point Addition for when P~1~=P~2~

When the x coordinates are the same and the y coordinate is different, we have the situation where the points are opposite each other over the x-axis. We know that this means:

P~1~=-P~2~ or P~1~+P~2~=I

What happens when P~1~=P~2~? Visually, we have to calculate the line that's *tangent* to the curve at P~1~ and find the point at which the line intersects the curve.

Once again, we'll have to find the slope of the tangent point.

P~1~=(x~1~,y~1~), P~3~=(x~3~,y~3~)

P~1~+P~1~=P~3~

s=(3x~1~^2^+a)/(2y~1~)

The rest of the formula goes through as before, except x~1~=x~2~, so we can combine them:

x~3~=s^2^-2x~1~

y~3~=s(x~1~-x~3~)-y~1~


.Deriving the Tangent LIne
****
We can derive the slope of the tangent line using some slightly more advanced math. Specifically calculus. We know that the slope at a given point is

dy/dx

To get this, we need to take the derivative of both sides of the elliptic curve equation:

y^2^=x^3^+ax+b

Taking the derivative we get:

2y dy=(3x^2^+a) dx

Solving for dy/dx, we get:

dy/dx=(3x^2^+a)/(2y)

That's how we arrive at the slope formula. The rest of the results from the point addition formula derivation hold.
****

==== Exercise {counter:exercise}

For the curve y^2^=x^3^+5x+7, what is (-1,1) + (-1,1)?

==== Exercise {counter:exercise}

Write the $$__add__$$ method where x~1~=x~2~ and y~1~=y~2~
